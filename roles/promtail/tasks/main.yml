- name: Initialise the deploy root and gather facts
  deploy_helper:
    path: "{{ promtail_dir }}"
    release: "v{{ promtail_version }}"
- name: Create deploy directory
  file:
    path: "{{ deploy_helper.new_release_path }}"
    state: directory
- name: Add an unfinished file, to allow cleanup on successful finalize
  file:
    path: "{{ deploy_helper.new_release_path }}/{{ deploy_helper.unfinished_filename }}"
    state: touch
- name: Download Promtail v{{ promtail_version }}
  get_url:
    dest: "{{ deploy_helper.new_release_path }}/promtail-linux-amd64.zip"
    url: "https://github.com/grafana/loki/releases/download/v{{ promtail_version }}/promtail-linux-amd64.zip"
    checksum: "{{ promtail_checksum }}"
- name: Extract Promtail v{{ promtail_version }}
  unarchive:
    src: "{{ deploy_helper.new_release_path }}/promtail-linux-amd64.zip"
    dest: "{{ deploy_helper.new_release_path }}"
    remote_src: yes
    creates: "{{ deploy_helper.new_release_path }}/promtail-linux-amd64"
- name: Create Promtail systemd system unit
  template:
    dest: /usr/local/lib/systemd/system/promtail.service
    src: promtail.service.j2
    force: yes
- name: Copy latest Promtail configuration
  template:
    dest: "{{ deploy_helper.shared_path }}/promtail.yml"
    src: promtail.yml.j2
    force: yes
    backup: yes
- name: Reload systemd daemon
  systemd:
    name: promtail.service
    daemon_reload: yes
- name: Enable Promtail service
  systemd:
    name: promtail.service
    enabled: yes
    state: started
- name: Finalise Promtail v{{ promtail_version }} installation
  deploy_helper:
    path: "{{ promtail_dir }}"
    keep_releases: 3
    state: finalize
    release: "v{{ promtail_version }}"
  notify: restart Promtail
